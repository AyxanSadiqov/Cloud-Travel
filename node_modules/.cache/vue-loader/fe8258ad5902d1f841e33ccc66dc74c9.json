{"remainingRequest":"C:\\wamp64\\www\\assignment\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\wamp64\\www\\assignment\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\wamp64\\www\\assignment\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\wamp64\\www\\assignment\\src\\components\\HomeFilter.vue?vue&type=template&id=0132efe7&scoped=true&","dependencies":[{"path":"C:\\wamp64\\www\\assignment\\src\\components\\HomeFilter.vue","mtime":1644673504498},{"path":"C:\\wamp64\\www\\assignment\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\assignment\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\assignment\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\assignment\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygiZGl2IiwgeyBhdHRyczogeyBpZDogImhvbWVmaWx0ZXIiIH0gfSwgWwogICAgX3ZtLl9tKDApLAogICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJzcGFjZSBub3NlbGVjdCIsIGF0dHJzOiB7IGlkOiAicHJpY2UiIH0gfSwgWwogICAgICBfYygiaGVhZGVyIiwgWwogICAgICAgIF9jKCJoNiIsIFtfdm0uX3YoIlByaWNlIHBlciBuaWdodCIpXSksCiAgICAgICAgX2MoCiAgICAgICAgICAic3BhbiIsCiAgICAgICAgICB7CiAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgICAgICAgICAgIHJldHVybiBfdm0uY2xlYXJQcmljZVBlck5pZ2h0KCkKICAgICAgICAgICAgICB9LAogICAgICAgICAgICB9LAogICAgICAgICAgfSwKICAgICAgICAgIFtfdm0uX3YoIkNsZWFyIildCiAgICAgICAgKSwKICAgICAgXSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAic2xpZGVyIiB9LCBbCiAgICAgICAgX2MoImRpdiIsIHsKICAgICAgICAgIHN0YXRpY0NsYXNzOiAicHJvZ3Jlc3MiLAogICAgICAgICAgc3R5bGU6IHsKICAgICAgICAgICAgbGVmdDogX3ZtLm1pblZhbCAvIDEwICsgIiUiLAogICAgICAgICAgICByaWdodDogMTAwIC0gX3ZtLm1heFZhbCAvIDEwICsgIiUiLAogICAgICAgICAgfSwKICAgICAgICB9KSwKICAgICAgXSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicmFuZ2UtaW5wdXQiIH0sIFsKICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBuYW1lOiAibW9kZWwiLAogICAgICAgICAgICAgIHJhd05hbWU6ICJ2LW1vZGVsIiwKICAgICAgICAgICAgICB2YWx1ZTogX3ZtLm1pblZhbCwKICAgICAgICAgICAgICBleHByZXNzaW9uOiAibWluVmFsIiwKICAgICAgICAgICAgfSwKICAgICAgICAgIF0sCiAgICAgICAgICBhdHRyczogeyB0eXBlOiAicmFuZ2UiLCBtaW46ICIwIiwgbWF4OiAiMTAwMCIsIHN0ZXA6ICIxMCIgfSwKICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiBfdm0ubWluVmFsIH0sCiAgICAgICAgICBvbjogewogICAgICAgICAgICBfX3I6IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgICAgICAgICBfdm0ubWluVmFsID0gJGV2ZW50LnRhcmdldC52YWx1ZQogICAgICAgICAgICB9LAogICAgICAgICAgfSwKICAgICAgICB9KSwKICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBuYW1lOiAibW9kZWwiLAogICAgICAgICAgICAgIHJhd05hbWU6ICJ2LW1vZGVsIiwKICAgICAgICAgICAgICB2YWx1ZTogX3ZtLm1heFZhbCwKICAgICAgICAgICAgICBleHByZXNzaW9uOiAibWF4VmFsIiwKICAgICAgICAgICAgfSwKICAgICAgICAgIF0sCiAgICAgICAgICBhdHRyczogeyB0eXBlOiAicmFuZ2UiLCBtaW46ICIwIiwgbWF4OiAiMTAwMCIsIHN0ZXA6ICIxMCIgfSwKICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiBfdm0ubWF4VmFsIH0sCiAgICAgICAgICBvbjogewogICAgICAgICAgICBfX3I6IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgICAgICAgICBfdm0ubWF4VmFsID0gJGV2ZW50LnRhcmdldC52YWx1ZQogICAgICAgICAgICB9LAogICAgICAgICAgfSwKICAgICAgICB9KSwKICAgICAgXSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAicHJpY2UtaW5wdXQiIH0sIFsKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImZpZWxkIiB9LCBbCiAgICAgICAgICBfYygic3BhbiIsIFtfdm0uX3YoIlNHRCIpXSksCiAgICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBuYW1lOiAibW9kZWwiLAogICAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgICAgdmFsdWU6IF92bS5taW5WYWwsCiAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAibWluVmFsIiwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICBdLAogICAgICAgICAgICBzdGF0aWNDbGFzczogImlucHV0LW1pbiIsCiAgICAgICAgICAgIGF0dHJzOiB7IHR5cGU6ICJudW1iZXIiIH0sCiAgICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiBfdm0ubWluVmFsIH0sCiAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgICAgICAgICAgIGlmICgkZXZlbnQudGFyZ2V0LmNvbXBvc2luZykgewogICAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF92bS5taW5WYWwgPSAkZXZlbnQudGFyZ2V0LnZhbHVlCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgfSwKICAgICAgICAgIH0pLAogICAgICAgIF0pLAogICAgICAgIF92bS5fbSgxKSwKICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImZpZWxkIiB9LCBbCiAgICAgICAgICBfYygic3BhbiIsIFtfdm0uX3YoIlNHRCIpXSksCiAgICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBuYW1lOiAibW9kZWwiLAogICAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgICAgdmFsdWU6IF92bS5tYXhWYWwsCiAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAibWF4VmFsIiwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICBdLAogICAgICAgICAgICBzdGF0aWNDbGFzczogImlucHV0LW1heCIsCiAgICAgICAgICAgIGF0dHJzOiB7IHR5cGU6ICJudW1iZXIiIH0sCiAgICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiBfdm0ubWF4VmFsIH0sCiAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgICAgICAgICAgIGlmICgkZXZlbnQudGFyZ2V0LmNvbXBvc2luZykgewogICAgICAgICAgICAgICAgICByZXR1cm4KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIF92bS5tYXhWYWwgPSAkZXZlbnQudGFyZ2V0LnZhbHVlCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgfSwKICAgICAgICAgIH0pLAogICAgICAgIF0pLAogICAgICBdKSwKICAgIF0pLAogICAgX2MoCiAgICAgICJkaXYiLAogICAgICB7IHN0YXRpY0NsYXNzOiAic3BhY2Ugbm9zZWxlY3QiLCBhdHRyczogeyBpZDogInJldmlld3MiIH0gfSwKICAgICAgWwogICAgICAgIF92bS5fbSgyKSwKICAgICAgICBfdm0uX2woX3ZtLnJldmlld3MsIGZ1bmN0aW9uIChyZXYpIHsKICAgICAgICAgIHJldHVybiBfYygiZGl2IiwgeyBrZXk6IHJldi5pZCwgc3RhdGljQ2xhc3M6ICJjb2xvbiIgfSwgWwogICAgICAgICAgICBfYygiZGl2IiwgWwogICAgICAgICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgICAgICAgIGF0dHJzOiB7IHR5cGU6ICJjaGVja2JveCIsIGlkOiByZXYuaWQsIG5hbWU6IHJldi5pZCB9LAogICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgY2hlY2tlZDogcmV2LmlzQ2hlY2tlZCwgdmFsdWU6IHJldi5uYW1lIH0sCiAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IHN0YXRpY0NsYXNzOiAibWFyayIgfSksCiAgICAgICAgICAgICAgX2MoImxhYmVsIiwgeyBhdHRyczogeyBmb3I6IHJldi5pZCB9IH0sIFsKICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MocmV2Lm5hbWUpKSwKICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF9jKCJkaXYiLCBbX3ZtLl92KCIgIiArIF92bS5fcyhyZXYuY291bnQpICsgIiAiKV0pLAogICAgICAgICAgXSkKICAgICAgICB9KSwKICAgICAgXSwKICAgICAgMgogICAgKSwKICAgIF9jKAogICAgICAiZGl2IiwKICAgICAgeyBzdGF0aWNDbGFzczogInNwYWNlIG5vc2VsZWN0IiwgYXR0cnM6IHsgaWQ6ICJyZXZpZXdzIiB9IH0sCiAgICAgIFsKICAgICAgICBfdm0uX20oMyksCiAgICAgICAgX3ZtLl9sKF92bS5zdGFyUmF0aW5nLCBmdW5jdGlvbiAoc3QpIHsKICAgICAgICAgIHJldHVybiBfYygiZGl2IiwgeyBrZXk6IHN0LmlkLCBzdGF0aWNDbGFzczogImNvbG9uIiB9LCBbCiAgICAgICAgICAgIF9jKCJkaXYiLCBbCiAgICAgICAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogImNoZWNrYm94IiwgaWQ6IHN0LmlkLCBuYW1lOiBzdC5pZCB9LAogICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgY2hlY2tlZDogc3QuaXNDaGVja2VkLCB2YWx1ZTogc3QubmFtZSB9LAogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogIm1hcmsiIH0pLAogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgImxhYmVsIiwKICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgZm9yOiBzdC5pZCB9IH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF92bS5fbChzdC5zdGFyLCBmdW5jdGlvbiAoaSkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICAgICAga2V5OiBpLAogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9pbWcvc3Rhci5wbmciKSwgYWx0OiAiIiB9LAogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICBfYygic3BhbiIsIFtfdm0uX3YoX3ZtLl9zKHN0Lm5hbWUpKV0pLAogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDIKICAgICAgICAgICAgICApLAogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoImRpdiIsIFtfdm0uX3YoIiAiICsgX3ZtLl9zKHN0LmNvdW50KSArICIgIildKSwKICAgICAgICAgIF0pCiAgICAgICAgfSksCiAgICAgIF0sCiAgICAgIDIKICAgICksCiAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInNwYWNlIG5vc2VsZWN0IiwgYXR0cnM6IHsgaWQ6ICJob3RlbG5hbWUiIH0gfSwgWwogICAgICBfdm0uX20oNCksCiAgICAgIF9jKAogICAgICAgICJkaXYiLAogICAgICAgIHsgc3RhdGljQ2xhc3M6ICJpbnB1dCIgfSwKICAgICAgICBbCiAgICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICAgIGF0dHJzOiB7IHR5cGU6ICJ0ZXh0IiwgcGxhY2Vob2xkZXI6ICJlLmcuIEhpbHRvbiwgSWJpcyAuLi4iIH0sCiAgICAgICAgICB9KSwKICAgICAgICAgIF9jKCJmb250LWF3ZXNvbWUtaWNvbiIsIHsKICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJpY29uIiwKICAgICAgICAgICAgYXR0cnM6IHsgaWNvbjogIm1hZ25pZnlpbmctZ2xhc3MiIH0sCiAgICAgICAgICB9KSwKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgIF0pLAogICAgX2MoCiAgICAgICJkaXYiLAogICAgICB7IHN0YXRpY0NsYXNzOiAic3BhY2Ugbm9zZWxlY3QiLCBhdHRyczogeyBpZDogInJldmlld3MiIH0gfSwKICAgICAgWwogICAgICAgIF92bS5fbSg1KSwKICAgICAgICBfdm0uX2woX3ZtLnJlc2VydmF0aW9uUG9saWN5LCBmdW5jdGlvbiAocnApIHsKICAgICAgICAgIHJldHVybiBfYygiZGl2IiwgeyBrZXk6IHJwLmlkLCBzdGF0aWNDbGFzczogImNvbG9uIiB9LCBbCiAgICAgICAgICAgIF9jKCJkaXYiLCBbCiAgICAgICAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogImNoZWNrYm94IiwgaWQ6IHJwLmlkLCBuYW1lOiBycC5pZCB9LAogICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IHJwLm5hbWUgfSwKICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJtYXJrIiB9KSwKICAgICAgICAgICAgICBfYygibGFiZWwiLCB7IGF0dHJzOiB7IGZvcjogcnAuaWQgfSB9LCBbCiAgICAgICAgICAgICAgICBfYygic3BhbiIsIFtfdm0uX3YoX3ZtLl9zKHJwLm5hbWUpKV0pLAogICAgICAgICAgICAgIF0pLAogICAgICAgICAgICBdKSwKICAgICAgICAgICAgX2MoImRpdiIsIFtfdm0uX3YoIiAiICsgX3ZtLl9zKHJwLmNvdW50KSArICIgIildKSwKICAgICAgICAgIF0pCiAgICAgICAgfSksCiAgICAgIF0sCiAgICAgIDIKICAgICksCiAgICBfYygKICAgICAgImRpdiIsCiAgICAgIHsgc3RhdGljQ2xhc3M6ICJzcGFjZSBub3NlbGVjdCIsIGF0dHJzOiB7IGlkOiAicmV2aWV3cyIgfSB9LAogICAgICBbCiAgICAgICAgX3ZtLl9tKDYpLAogICAgICAgIF92bS5fbChfdm0ubWVhbFBsYW5Db250cm9sbGVyKCksIGZ1bmN0aW9uIChtcCkgewogICAgICAgICAgcmV0dXJuIF9jKCJkaXYiLCB7IGtleTogbXAuaWQsIHN0YXRpY0NsYXNzOiAiY29sb24iIH0sIFsKICAgICAgICAgICAgX2MoImRpdiIsIFsKICAgICAgICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICAgICAgICBhdHRyczogeyB0eXBlOiAiY2hlY2tib3giLCBpZDogbXAuaWQsIG5hbWU6IG1wLmlkIH0sCiAgICAgICAgICAgICAgICBkb21Qcm9wczogeyB2YWx1ZTogbXAubmFtZSB9LAogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogIm1hcmsiIH0pLAogICAgICAgICAgICAgIF9jKCJsYWJlbCIsIHsgYXR0cnM6IHsgZm9yOiBtcC5pZCB9IH0sIFsKICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgW192bS5fdihfdm0uX3MobXAubmFtZSkpXSksCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygiZGl2IiwgW192bS5fdigiICIgKyBfdm0uX3MobXAuY291bnQpICsgIiAiKV0pLAogICAgICAgICAgXSkKICAgICAgICB9KSwKICAgICAgICBfYygKICAgICAgICAgICJidXR0b24iLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogInNob3ctbW9yZS1idXR0b24iLAogICAgICAgICAgICBvbjogewogICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgICAgICAgICBfdm0uc2hvd01lYWxQbGFuTW9yZSA9ICFfdm0uc2hvd01lYWxQbGFuTW9yZQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgIH0sCiAgICAgICAgICB9LAogICAgICAgICAgWwogICAgICAgICAgICBfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS5tZWFsUGxhbkNvdW50KSArICIgIiksCiAgICAgICAgICAgIF9jKCJmb250LWF3ZXNvbWUtaWNvbiIsIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImljb24iLAogICAgICAgICAgICAgIGF0dHJzOiB7IGljb246IF92bS5zaG93TWVhbFBsYW5Nb3JlID8gImNhcmV0LWRvd24iIDogImNhcmV0LXVwIiB9LAogICAgICAgICAgICB9KSwKICAgICAgICAgIF0sCiAgICAgICAgICAxCiAgICAgICAgKSwKICAgICAgXSwKICAgICAgMgogICAgKSwKICAgIF9jKAogICAgICAiZGl2IiwKICAgICAgeyBzdGF0aWNDbGFzczogInNwYWNlIG5vc2VsZWN0IiwgYXR0cnM6IHsgaWQ6ICJyZXZpZXdzIiB9IH0sCiAgICAgIFsKICAgICAgICBfdm0uX20oNyksCiAgICAgICAgX3ZtLl9sKF92bS5wcm9wZXJ0eVR5cGVDb250cm9sbGVyKCksIGZ1bmN0aW9uIChwdCkgewogICAgICAgICAgcmV0dXJuIF9jKCJkaXYiLCB7IGtleTogcHQuaWQsIHN0YXRpY0NsYXNzOiAiY29sb24iIH0sIFsKICAgICAgICAgICAgX2MoImRpdiIsIFsKICAgICAgICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICAgICAgICBhdHRyczogeyB0eXBlOiAiY2hlY2tib3giLCBpZDogcHQuaWQsIG5hbWU6IHB0LmlkIH0sCiAgICAgICAgICAgICAgICBkb21Qcm9wczogeyB2YWx1ZTogcHQubmFtZSB9LAogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogIm1hcmsiIH0pLAogICAgICAgICAgICAgIF9jKCJsYWJlbCIsIHsgYXR0cnM6IHsgZm9yOiBwdC5pZCB9IH0sIFsKICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgW192bS5fdihfdm0uX3MocHQubmFtZSkpXSksCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygiZGl2IiwgW192bS5fdigiICIgKyBfdm0uX3MocHQuY291bnQpICsgIiAiKV0pLAogICAgICAgICAgXSkKICAgICAgICB9KSwKICAgICAgICBfYygKICAgICAgICAgICJidXR0b24iLAogICAgICAgICAgewogICAgICAgICAgICBzdGF0aWNDbGFzczogInNob3ctbW9yZS1idXR0b24iLAogICAgICAgICAgICBvbjogewogICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgICAgICAgICBfdm0uc2hvd1Byb3BlcnR5VHlwZU1vcmUgPSAhX3ZtLnNob3dQcm9wZXJ0eVR5cGVNb3JlCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgfSwKICAgICAgICAgIH0sCiAgICAgICAgICBbCiAgICAgICAgICAgIF92bS5fdigiICIgKyBfdm0uX3MoX3ZtLnByb3BlcnR5VHlwZUNvdW50KSArICIgIiksCiAgICAgICAgICAgIF9jKCJmb250LWF3ZXNvbWUtaWNvbiIsIHsKICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImljb24iLAogICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICBpY29uOiBfdm0uc2hvd1Byb3BlcnR5VHlwZU1vcmUgPyAiY2FyZXQtZG93biIgOiAiY2FyZXQtdXAiLAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgIH0pLAogICAgICAgICAgXSwKICAgICAgICAgIDEKICAgICAgICApLAogICAgICBdLAogICAgICAyCiAgICApLAogICAgX2MoCiAgICAgICJkaXYiLAogICAgICB7IHN0YXRpY0NsYXNzOiAic3BhY2Ugbm9zZWxlY3QiLCBhdHRyczogeyBpZDogInJldmlld3MiIH0gfSwKICAgICAgWwogICAgICAgIF92bS5fbSg4KSwKICAgICAgICBfdm0uX2woX3ZtLmZhY2lsaXRpZXMsIGZ1bmN0aW9uIChmYykgewogICAgICAgICAgcmV0dXJuIF9jKCJkaXYiLCB7IGtleTogZmMuaWQsIHN0YXRpY0NsYXNzOiAiY29sb24iIH0sIFsKICAgICAgICAgICAgX2MoImRpdiIsIFsKICAgICAgICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICAgICAgICBhdHRyczogeyB0eXBlOiAiY2hlY2tib3giLCBpZDogZmMuaWQsIG5hbWU6IGZjLmlkIH0sCiAgICAgICAgICAgICAgICBkb21Qcm9wczogeyB2YWx1ZTogZmMubmFtZSB9LAogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIF9jKCJzcGFuIiwgeyBzdGF0aWNDbGFzczogIm1hcmsiIH0pLAogICAgICAgICAgICAgIF9jKCJsYWJlbCIsIHsgYXR0cnM6IHsgZm9yOiBmYy5pZCB9IH0sIFsKICAgICAgICAgICAgICAgIF9jKCJzcGFuIiwgW192bS5fdihfdm0uX3MoZmMubmFtZSkpXSksCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgIF0pLAogICAgICAgICAgICBfYygiZGl2IiwgW192bS5fdigiICIgKyBfdm0uX3MoZmMuY291bnQpICsgIiAiKV0pLAogICAgICAgICAgXSkKICAgICAgICB9KSwKICAgICAgICBfYygKICAgICAgICAgICJidXR0b24iLAogICAgICAgICAgeyBzdGF0aWNDbGFzczogInNob3ctbW9yZS1idXR0b24iIH0sCiAgICAgICAgICBbCiAgICAgICAgICAgIF92bS5fdigiIFNob3cgMjYgbW9yZSIpLAogICAgICAgICAgICBfYygiZm9udC1hd2Vzb21lLWljb24iLCB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJpY29uIiwKICAgICAgICAgICAgICBhdHRyczogeyBpY29uOiAiY2FyZXQtZG93biIgfSwKICAgICAgICAgICAgfSksCiAgICAgICAgICBdLAogICAgICAgICAgMQogICAgICAgICksCiAgICAgIF0sCiAgICAgIDIKICAgICksCiAgXSkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gWwogIGZ1bmN0aW9uICgpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAic3BhY2Ugbm9zZWxlY3QiLCBhdHRyczogeyBpZDogIm1hcCIgfSB9LCBbCiAgICAgIF9jKCJpbWciLCB7IGF0dHJzOiB7IHNyYzogcmVxdWlyZSgiQC9hc3NldHMvaW1nL21hcC5wbmciKSwgYWx0OiAiIiB9IH0pLAogICAgICBfYygiYnV0dG9uIiwgW192bS5fdigiU2hvdyBvbiBtYXAiKV0pLAogICAgXSkKICB9LAogIGZ1bmN0aW9uICgpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAic2VwYXJhdG9yIiB9LCBbCiAgICAgIF9jKCJzcGFuIiwgW192bS5fdigiLSIpXSksCiAgICAgIF9jKCJzcGFuIiwgW192bS5fdigiLSIpXSksCiAgICAgIF9jKCJzcGFuIiwgW192bS5fdigiLSIpXSksCiAgICAgIF9jKCJzcGFuIiwgW192bS5fdigiLSIpXSksCiAgICBdKQogIH0sCiAgZnVuY3Rpb24gKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2xvbi10aXRsZSIgfSwgWwogICAgICBfYygiZGl2IiwgW192bS5fdigiUmV2aWV3cyIpXSksCiAgICAgIF9jKCJkaXYiLCBbX3ZtLl92KCJDbGVhciIpXSksCiAgICBdKQogIH0sCiAgZnVuY3Rpb24gKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2xvbi10aXRsZSIgfSwgWwogICAgICBfYygiZGl2IiwgW192bS5fdigiU3RhciByYXRpbmciKV0pLAogICAgICBfYygiZGl2IiwgW192bS5fdigiQ2xlYXIiKV0pLAogICAgXSkKICB9LAogIGZ1bmN0aW9uICgpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sb24tdGl0bGUiIH0sIFsKICAgICAgX2MoImRpdiIsIFtfdm0uX3YoIkhvdGVsIG5hbWUiKV0pLAogICAgXSkKICB9LAogIGZ1bmN0aW9uICgpIHsKICAgIHZhciBfdm0gPSB0aGlzCiAgICB2YXIgX2ggPSBfdm0uJGNyZWF0ZUVsZW1lbnQKICAgIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogICAgcmV0dXJuIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiY29sb24tdGl0bGUiIH0sIFsKICAgICAgX2MoImRpdiIsIFtfdm0uX3YoIlJlc2VydmF0aW9uIHBvbGljeSIpXSksCiAgICBdKQogIH0sCiAgZnVuY3Rpb24gKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJjb2xvbi10aXRsZSIgfSwgWwogICAgICBfYygiZGl2IiwgW192bS5fdigiTWVhbCBwbGFuIildKSwKICAgIF0pCiAgfSwKICBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbG9uLXRpdGxlIiB9LCBbCiAgICAgIF9jKCJkaXYiLCBbX3ZtLl92KCJQcm9wZXJ0eSB0eXBlIildKSwKICAgIF0pCiAgfSwKICBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImNvbG9uLXRpdGxlIiB9LCBbCiAgICAgIF9jKCJkaXYiLCBbX3ZtLl92KCJGYWNpbGl0aWVzIildKSwKICAgIF0pCiAgfSwKXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}