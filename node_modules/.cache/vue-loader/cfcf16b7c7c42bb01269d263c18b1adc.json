{"remainingRequest":"C:\\wamp64\\www\\assignment\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\wamp64\\www\\assignment\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\wamp64\\www\\assignment\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\wamp64\\www\\assignment\\src\\components\\HomeShares.vue?vue&type=template&id=17841a3a&scoped=true&","dependencies":[{"path":"C:\\wamp64\\www\\assignment\\src\\components\\HomeShares.vue","mtime":1645458387409},{"path":"C:\\wamp64\\www\\assignment\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\assignment\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\assignment\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\wamp64\\www\\assignment\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygiZGl2IiwgWwogICAgX2MoImRpdiIsIHsgYXR0cnM6IHsgaWQ6ICJob21lVGl0bGVzIiB9IH0sIFsKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0aXRsZSIgfSwgWwogICAgICAgIF92bS5fdigiU2luZ2Fwb3JlOiA5OTk5IHByb3BlcnRpZXMgZm91bmQiKSwKICAgICAgXSksCiAgICAgIF9jKAogICAgICAgICJkaXYiLAogICAgICAgIHsgc3RhdGljQ2xhc3M6ICJmaWx0ZXJzIiB9LAogICAgICAgIF92bS5fbChfdm0uZmlsdGVycywgZnVuY3Rpb24gKGZpbHRlcikgewogICAgICAgICAgcmV0dXJuIF9jKAogICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGtleTogZmlsdGVyLmlkLAogICAgICAgICAgICAgIGNsYXNzOiB7IGFjdGl2ZTogZmlsdGVyLmlkID09IF92bS5jdXJyZW50IH0sCiAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uY2hvb3NlRmlsdGVyKGZpbHRlcikKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF92bS5fdigiICIgKyBfdm0uX3MoZmlsdGVyLm5hbWUpICsgIiAiKSwKICAgICAgICAgICAgICBmaWx0ZXIuaXNEcm9wZG93bgogICAgICAgICAgICAgICAgPyBfYygiZm9udC1hd2Vzb21lLWljb24iLCB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJpY29uIiwKICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBpY29uOiAiY2FyZXQtZG93biIgfSwKICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksCiAgICAgICAgICAgICAgZmlsdGVyLmlzRHJvcGRvd24KICAgICAgICAgICAgICAgID8gX2MoInVsIiwgW19jKCJsaSIsIFtfdm0uX3YoIlByaWNlIChoaWdoZXN0IGZpcnN0KSIpXSldKQogICAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKQogICAgICAgIH0pLAogICAgICAgIDAKICAgICAgKSwKICAgIF0pLAogICAgX3ZtLnNob3dOb3JtYWwgPT0gMQogICAgICA/IF9jKAogICAgICAgICAgImRpdiIsCiAgICAgICAgICBbCiAgICAgICAgICAgIF92bS5zaG93TG9hZGluZwogICAgICAgICAgICAgID8gX2MoCiAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICBfdm0uX2woMTIsIGZ1bmN0aW9uIChpKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jKAogICAgICAgICAgICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIGtleTogaSwKICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJza2VsZXRvbi1tYWluIiwKICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWQ6ICJob21lU2hhcmVzIiB9LAogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJsZWZ0IHNrZWxldG9uLWxlZnQiIH0pLAogICAgICAgICAgICAgICAgICAgICAgICBfdm0uX20oMCwgdHJ1ZSksCiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fbSgxLCB0cnVlKSwKICAgICAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICAwCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgOiBfdm0uX2UoKSwKICAgICAgICAgICAgX3ZtLl9sKF92bS5ob3RlbHNbMF0sIGZ1bmN0aW9uIChob3RlbCkgewogICAgICAgICAgICAgIHJldHVybiBfYygiZGl2IiwgeyBrZXk6IGhvdGVsLmlkLCBhdHRyczogeyBpZDogImhvbWVTaGFyZXMiIH0gfSwgWwogICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiAibGVmdCIgfSwKICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgIF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBzcmM6IGhvdGVsLnByb3BlcnR5Lmhlcm9JbWFnZS51cmwsIGFsdDogIiIgfSwKICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICBfdm0uX2woaG90ZWwucHJvcGVydHkuZ2FsbGVyeSwgZnVuY3Rpb24gKGdhbGxlcnkpIHsKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfYygic3BhbiIsIHsga2V5OiBnYWxsZXJ5LmlkIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgZ2FsbGVyeS54cwogICAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiBnYWxsZXJ5LnhzLnVybCwgYWx0OiAiIiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgICAgICA6IGdhbGxlcnkucwogICAgICAgICAgICAgICAgICAgICAgICAgID8gX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgc3JjOiBnYWxsZXJ5LnMudXJsLCBhbHQ6ICIiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICAgICAgICAgIDogZ2FsbGVyeS5tCiAgICAgICAgICAgICAgICAgICAgICAgICAgPyBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBzcmM6IGdhbGxlcnkubS51cmwsIGFsdDogIiIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgICAgICAgOiBnYWxsZXJ5LmwKICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKCJpbWciLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IHNyYzogZ2FsbGVyeS5sLnVybCwgYWx0OiAiIiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgMgogICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibWlkZGxlIiB9LCBbCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJ0aXRsZSIgfSwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiAiICsgX3ZtLl9zKGhvdGVsLnByb3BlcnR5Lm5hbWUpICsgIiAiKSwKICAgICAgICAgICAgICAgICAgICAgIF92bS5fbChwYXJzZUludChob3RlbC5wcm9wZXJ0eS5zdGFyUmF0aW5nKSwgZnVuY3Rpb24gKGkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jKCJzcGFuIiwgeyBrZXk6IGksIHN0YXRpY0NsYXNzOiAic3RhcnMiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygiaW1nIiwgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9pbWcvc3Rhci5wbmciKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWx0OiAiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIDIKICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJzdWJ0aXRsZSIgfSwgWwogICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICIgIiArCiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhob3RlbC5wcm9wZXJ0eS5sb2NhdGlvbi5hZGRyZXNzKSArCiAgICAgICAgICAgICAgICAgICAgICAgICIsICIgKwogICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MoaG90ZWwucHJvcGVydHkubG9jYXRpb24uY2l0eSkgKwogICAgICAgICAgICAgICAgICAgICAgICAiLCAiICsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9zKGhvdGVsLnByb3BlcnR5LmxvY2F0aW9uLmNvdW50cnkpICsKICAgICAgICAgICAgICAgICAgICAgICAgIiAiCiAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJjb21tZW50IiB9LAogICAgICAgICAgICAgICAgICAgIF92bS5fbChob3RlbC5wcm9wZXJ0eS5yZXZpZXdzLCBmdW5jdGlvbiAocmV2aWV3KSB7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2MoInNwYW4iLCB7IGtleTogcmV2aWV3LmlkIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCciJyArIF92bS5fcyhyZXZpZXcudGV4dCkgKyAnIicpLAogICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAwCiAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJsYWJlbHMiIH0sCiAgICAgICAgICAgICAgICAgICAgX3ZtLl9sKF92bS5sYWJlbEFjdGlvbnMoaG90ZWwucGFja2FnZXNbMF0pLCBmdW5jdGlvbiAobGJsKSB7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgICAgICB7IGtleTogbGJsLmlkLCBzdGF0aWNDbGFzczogImVhY2gtbGFiZWwiIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoIiAiICsgX3ZtLl9zKGxibCkgKyAiICIpLAogICAgICAgICAgICAgICAgICAgICAgICAgIGxibC5pbmNsdWRlcygiKyIpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6ICJwb3B1cCIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX2woCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uYWxsTGFiZWxzKGhvdGVsLnBhY2thZ2VzWzBdKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIChhbGxfbGJsKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IGtleTogYWxsX2xibC5pZCB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJmb250LWF3ZXNvbWUtaWNvbiIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJpY29uIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWNvbjogImNoZWNrIiB9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKGFsbF9sYmwpICsgIiAiKSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICAgICAgICAgICAgICBdCiAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgMAogICAgICAgICAgICAgICAgICApLAogICAgICAgICAgICAgICAgICBob3RlbC5wcm9wZXJ0eS5jb3ZpZFNhZmV0eQogICAgICAgICAgICAgICAgICAgID8gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJmb290ZXIiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgX2MoImltZyIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjOiByZXF1aXJlKCJAL2Fzc2V0cy9pbWcvVmVjdG9yLnBuZyIpLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgYWx0OiAiIiwKICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIgIiArIF92bS5fcyhob3RlbC5wcm9wZXJ0eS5jb3ZpZFNhZmV0eSkgKyAiICIpLAogICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInJpZ2h0IiB9LCBbCiAgICAgICAgICAgICAgICAgIF92bS5fbSgyLCB0cnVlKSwKICAgICAgICAgICAgICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJib3R0b20iIH0sIFsKICAgICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIm9uZSIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgICAiICIgKwogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhfdm0uY2FsY3VsYXRlU2F2ZShob3RlbC5wYWNrYWdlc1swXSkucmF0ZSkgKwogICAgICAgICAgICAgICAgICAgICAgICAgICIgIgogICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInR3byIgfSwgWwogICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCIgTmlnaHRseSBhdmcuICIpLAogICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAidGhyZWUiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgIF92bS5jYWxjdWxhdGVTYXZlKGhvdGVsLnBhY2thZ2VzWzBdKS5zaG93T2xkUHJpY2UKICAgICAgICAgICAgICAgICAgICAgICAgPyBfYygic3BhbiIsIHsgc3RhdGljQ2xhc3M6ICJsaXR0bGUiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoaG90ZWwucGFja2FnZXNbMF0uZGlzcGxheVJhdGUudmFsdWUpKSwKICAgICAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLAogICAgICAgICAgICAgICAgICAgICAgX2MoInNwYW4iLCB7IHN0YXRpY0NsYXNzOiAiYmlnIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MoaG90ZWwucGFja2FnZXNbMF0uYWRqdXN0ZWREaXNwbGF5UmF0ZS52YWx1ZSkKICAgICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgIF0pCiAgICAgICAgICAgIH0pLAogICAgICAgICAgXSwKICAgICAgICAgIDIKICAgICAgICApCiAgICAgIDogX3ZtLnNob3dOb3JtYWwgPT0gMgogICAgICA/IF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAibm8tcmVzdWx0IiB9LCBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgImRpdiIsCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygiZm9udC1hd2Vzb21lLWljb24iLCB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImljb24iLAogICAgICAgICAgICAgICAgYXR0cnM6IHsgaWNvbjogIm1hZ25pZnlpbmctZ2xhc3MiIH0sCiAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICksCiAgICAgICAgICBfYygiZGl2IiwgWwogICAgICAgICAgICBfdm0uX3YoIlNvcnJ5ISBXZSBjb3VsZG4ndCBmaW5kIGFueSBwcm9wZXJ0aWVzIGZvciB5b3VyIHNlYXJjaC4iKSwKICAgICAgICAgIF0pLAogICAgICAgIF0pCiAgICAgIDogX3ZtLnNob3dOb3JtYWwgPT0gMwogICAgICA/IF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiYmFkLXBhcmFtcyIgfSwgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJkaXYiLAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoImZvbnQtYXdlc29tZS1pY29uIiwgewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJpY29uIiwKICAgICAgICAgICAgICAgIGF0dHJzOiB7IGljb246ICJjaXJjbGUtZXhjbGFtYXRpb24iIH0sCiAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICksCiAgICAgICAgICBfYygiZGl2IiwgW192bS5fdigiT3Bwcywgc29tZXRoaW5nIHdlbnQgd3JvbmcuIildKSwKICAgICAgICAgIF9jKCJkaXYiLCBbX3ZtLl92KCJlcnJvciBtZXNzYWdlIGhlcmUiKV0pLAogICAgICAgIF0pCiAgICAgIDogX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJiZWZvcmUtcmVxdWVzdCIgfSwgWwogICAgICAgICAgX2MoImRpdiIsIFtfdm0uX3YoIkNob29zZSBhIGNpdHkiKV0pLAogICAgICAgIF0pLAogIF0pCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFsKICBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIm1pZGRsZSIgfSwgWwogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInNrZWxldG9uLW1pZGRsZSIgfSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAic2tlbGV0b24tbWlkZGxlIiB9KSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJza2VsZXRvbi1taWRkbGUiIH0pLAogICAgICBfYygiYnIiKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJza2VsZXRvbi1taWRkbGU0IiB9KSwKICAgIF0pCiAgfSwKICBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX3ZtID0gdGhpcwogICAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgICB2YXIgX2MgPSBfdm0uX3NlbGYuX2MgfHwgX2gKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogInJpZ2h0IiB9LCBbCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAic2tlbGV0b24tcmlnaHQiIH0pLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImJvdHRvbSIgfSwgWwogICAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAic2tlbGV0b24tcmlnaHQyIiB9KSwKICAgICAgXSksCiAgICBdKQogIH0sCiAgZnVuY3Rpb24gKCkgewogICAgdmFyIF92bSA9IHRoaXMKICAgIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogICAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgICByZXR1cm4gX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJ0b3AiIH0sIFsKICAgICAgX2MoImltZyIsIHsKICAgICAgICBhdHRyczogeyBzcmM6IHJlcXVpcmUoIkAvYXNzZXRzL2ltZy9zY29yZS13aWRnZXQucG5nIiksIGFsdDogIiIgfSwKICAgICAgfSksCiAgICBdKQogIH0sCl0KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}